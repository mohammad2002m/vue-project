{"ast":null,"code":"import moment from 'moment';\nexport default {\n  name: 'FormInputComponent',\n  expose: ['userInput', 'fromState', 'CheckValidityForDate', 'CheckValidityForText', 'CheckValidityForSelect'],\n  props: {\n    inputType: String,\n    placeholder: String,\n    title: String,\n    optionsList: Array,\n    isReadOnly: Boolean\n  },\n  data() {\n    return {\n      userInput: this.InitialInputValue(),\n      validMsg: '',\n      fromState: true,\n      inputStyle: 'form-control',\n      msgStyle: ''\n    };\n  },\n  methods: {\n    /*\r\n    CheckIfReadOnly(){\r\n      if (this.isReadOnly){\r\n        this.inputStyle = 'form-control read'\r\n      }\r\n    },\r\n      InitialInputValue(){\r\n      if (this.inputType == 'select'){\r\n        return this.optionsList[0];\r\n      } else if (this.inputType == 'date'){\r\n        return moment(new Date()).format('YYYY-MM-DD');\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n    CheckValidityForText() {\r\n      let isValid = true;\r\n      if (this.userInput == ''){\r\n        this.validMsg = 'هذا الحقل مطلوب';\r\n        isValid = false;\r\n      } else {\r\n        this.validMsg = '';\r\n      }\r\n        if (isValid){\r\n        this.inputStyle = 'form-control is-valid';\r\n        this.msgStyle = 'msgValid';\r\n      } else {\r\n        this.inputStyle = 'form-control is-invalid';\r\n        this.msgStyle = 'msgInvalid';\r\n      }\r\n        return isValid;\r\n    },\r\n    EmitCheckDate(){\r\n      this.$emit('check-date');\r\n    },\r\n    CheckValidityForDate() {\r\n      let isValid = true;\r\n      \r\n      if (this.userInput == ''){\r\n        this.validMsg = 'هذا الحقل مطلوب';\r\n        isValid = false;\r\n      }\r\n      else if (moment().diff(this.userInput , 'day') > 0){\r\n        this.validMsg = 'التاريخ أقل من التريخ الحالي';\r\n        isValid = false;\r\n      }\r\n      else if (this.fromState == false){\r\n        this.validMsg = 'تاريخ إنتهاء الإجازة أقل من تاريخ بداية الإجازة';\r\n        isValid = false;\r\n      } else {\r\n        this.validMsg = '';\r\n      }\r\n        if (isValid){\r\n        this.inputStyle = 'form-control is-valid';\r\n        this.msgStyle = 'msgValid';\r\n      } else {\r\n        this.inputStyle = 'form-control is-invalid';\r\n        this.msgStyle = 'msgInvalid';\r\n      }\r\n        return isValid;\r\n    },\r\n    CheckValidityForSelect(){\r\n        this.inputStyle = 'form-control is-valid';\r\n        return true;\r\n    }\r\n      */\n  }\n};","map":{"version":3,"names":["moment","name","expose","props","inputType","String","placeholder","title","optionsList","Array","isReadOnly","Boolean","data","userInput","InitialInputValue","validMsg","fromState","inputStyle","msgStyle","methods"],"sources":["D:\\Vue\\vue-project-last\\src\\components\\RequestForm\\FormInputComponent.vue"],"sourcesContent":["<template>\r\n      <!--\r\n        :value=\"inputType == 'date' ? '2023-01-01' : ''\"\r\n      -->\r\n\r\n      <div v-if=\"inputType == 'text' || inputType == 'number'\" class=\"col-md text\">\r\n        <label for=\"\"> {{ title }} <span style=\"color:red;\">*</span> </label>\r\n        <input v-model=\"userInput\" :type=\"inputType\" :class=\"inputStyle\" :placeholder=\"title\" @focusout=\"CheckValidityForText();\" @input=\"CheckValidityForText();\" :disabled=\"isReadOnly\"/>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n      </div>\r\n      <div v-else-if=\"inputType == 'date'\" class=\"col-md date\">\r\n        <label for=\"\"> {{ title }} <span style=\"color:red;\">*</span></label>\r\n        <input v-model=\"userInput\" :type=\"inputType\" :class=\"inputStyle\"  @focusout=\"EmitCheckDate(); CheckValidityForDate();\" @input=\" EmitCheckDate(); CheckValidityForDate();\" :disabled=\"isReadOnly\"/>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n      </div>\r\n      <div v-else-if=\"inputType == 'textarea'\">\r\n        <label for=\"\"> {{ title }} <span style=\"color:red;\">*</span></label>\r\n        <textarea v-model=\"userInput\" type=\"text\" :class=\"inputStyle\" :placeholder=\"title\" rows=\"8\" @focusout=\"CheckValidityForText();\" @input=\"CheckValidityForText();\" :disabled=\"isReadOnly\"></textarea>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n      </div>\r\n      <div v-else-if=\"inputType == 'select'\" @input=\"CheckValidityForSelect();\">\r\n        <label> {{ title }} <span style=\"color:red;\">*</span></label>\r\n        <select v-model=\"userInput\" :class=\"inputStyle\" :disabled=\"isReadOnly\">\r\n          <option  v-for=\"(option, index) in optionsList\" :key=\"index\" :value=\"option\"> {{ option }} </option>\r\n        </select>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment';\r\nexport default {\r\n  name: 'FormInputComponent',\r\n  expose: ['userInput' , 'fromState' , 'CheckValidityForDate' , 'CheckValidityForText' , 'CheckValidityForSelect'],\r\n  props: {\r\n    inputType: String,\r\n    placeholder: String,\r\n    title: String,\r\n    optionsList: Array,\r\n    isReadOnly: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      userInput: this.InitialInputValue(),\r\n      validMsg: '',\r\n      fromState: true,\r\n      inputStyle: 'form-control',\r\n      msgStyle: ''\r\n    }\r\n  },\r\n  methods: {\r\n    /*\r\n    CheckIfReadOnly(){\r\n      if (this.isReadOnly){\r\n        this.inputStyle = 'form-control read'\r\n      }\r\n    },\r\n\r\n    InitialInputValue(){\r\n      if (this.inputType == 'select'){\r\n        return this.optionsList[0];\r\n      } else if (this.inputType == 'date'){\r\n        return moment(new Date()).format('YYYY-MM-DD');\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n    CheckValidityForText() {\r\n      let isValid = true;\r\n      if (this.userInput == ''){\r\n        this.validMsg = 'هذا الحقل مطلوب';\r\n        isValid = false;\r\n      } else {\r\n        this.validMsg = '';\r\n      }\r\n\r\n      if (isValid){\r\n        this.inputStyle = 'form-control is-valid';\r\n        this.msgStyle = 'msgValid';\r\n      } else {\r\n        this.inputStyle = 'form-control is-invalid';\r\n        this.msgStyle = 'msgInvalid';\r\n      }\r\n\r\n      return isValid;\r\n    },\r\n    EmitCheckDate(){\r\n      this.$emit('check-date');\r\n    },\r\n    CheckValidityForDate() {\r\n      let isValid = true;\r\n      \r\n      if (this.userInput == ''){\r\n        this.validMsg = 'هذا الحقل مطلوب';\r\n        isValid = false;\r\n      }\r\n      else if (moment().diff(this.userInput , 'day') > 0){\r\n        this.validMsg = 'التاريخ أقل من التريخ الحالي';\r\n        isValid = false;\r\n      }\r\n      else if (this.fromState == false){\r\n        this.validMsg = 'تاريخ إنتهاء الإجازة أقل من تاريخ بداية الإجازة';\r\n        isValid = false;\r\n      } else {\r\n        this.validMsg = '';\r\n      }\r\n\r\n      if (isValid){\r\n        this.inputStyle = 'form-control is-valid';\r\n        this.msgStyle = 'msgValid';\r\n      } else {\r\n        this.inputStyle = 'form-control is-invalid';\r\n        this.msgStyle = 'msgInvalid';\r\n      }\r\n\r\n      return isValid;\r\n    },\r\n    CheckValidityForSelect(){\r\n        this.inputStyle = 'form-control is-valid';\r\n        return true;\r\n    }\r\n\r\n    */\r\n  }\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  label {\r\n    margin-right: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  div {\r\n    margin-bottom: 3rem;\r\n    direction: rtl;\r\n  }\r\n  select {\r\n    background-position: left 0.75rem center;\r\n    padding-right: 0.57rem;\r\n  }\r\n  select:not(:focus) {\r\n    color: #595c5f;\r\n  }\r\n\r\n  input {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .msgValid {\r\n    color:rgb(40,167,69);\r\n  }\r\n  .msgInvalid {\r\n    color: rgb(220,53,69);\r\n  }\r\n\r\n</style>"],"mappings":"AA8BA,OAAOA,MAAK,MAAO,QAAQ;AAC3B,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,MAAM,EAAE,CAAC,WAAU,EAAI,WAAU,EAAI,sBAAqB,EAAI,sBAAqB,EAAI,wBAAwB,CAAC;EAChHC,KAAK,EAAE;IACLC,SAAS,EAAEC,MAAM;IACjBC,WAAW,EAAED,MAAM;IACnBE,KAAK,EAAEF,MAAM;IACbG,WAAW,EAAEC,KAAK;IAClBC,UAAU,EAAEC;EACd,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI,CAACC,iBAAiB,EAAE;MACnCC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,cAAc;MAC1BC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;AA0EJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}