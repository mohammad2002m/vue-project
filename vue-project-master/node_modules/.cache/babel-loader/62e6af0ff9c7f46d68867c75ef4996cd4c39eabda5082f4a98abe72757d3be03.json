{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-738bbc54\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"col-md\"\n};\nconst _hoisted_2 = {\n  for: \"\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"*\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"type\", \"value\", \"placeholder\", \"disabled\"];\nconst _hoisted_5 = {\n  for: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", _hoisted_2, [_createTextVNode(_toDisplayString($props.title) + \" \", 1 /* TEXT */), _hoisted_3]), _createElementVNode(\"input\", {\n    type: $props.type,\n    value: $props.type == 'date' ? $props.modelValue.toISOString().substr(0, 10) : $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value)),\n    class: _normalizeClass('form-control ' + $props.classValue),\n    placeholder: $props.title,\n    disabled: $props.isReadOnly\n  }, null, 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_4), _createElementVNode(\"label\", _hoisted_5, _toDisplayString($data.validMsg), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","for","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$props","title","_hoisted_3","type","value","modelValue","toISOString","substr","onInput","_cache","$event","_ctx","$emit","target","_normalizeClass","classValue","placeholder","disabled","isReadOnly","_hoisted_5","_toDisplayString","$data","validMsg"],"sources":["D:\\Vue\\vue-project-last-edition\\vue-project\\vue-project-master\\src\\components\\FormComponents\\FormComponent.vue"],"sourcesContent":["<template>\r\n      <div class=\"col-md\">\r\n        <label for=\"\"> {{ title }} <span>*</span> </label>\r\n        <input :type=\"type\"\r\n         :value=\"type == 'date' ? modelValue.toISOString().substr(0 , 10)  : modelValue\"\r\n         @input=\"$emit('update:modelValue', $event.target.value)\"\r\n         :class=\"'form-control ' + classValue\"\r\n         :placeholder=\"title\"\r\n         :disabled=\"isReadOnly\"/>\r\n        <label for=\"\"> {{ validMsg }} </label>\r\n      </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FormComponent',\r\n  props: {\r\n    type: String,\r\n    placeholder: String,\r\n    modelValue: type == date ? Date : String,\r\n    title: String,\r\n    isReadOnly: Boolean,\r\n    classValue: String,\r\n  },\r\n  data() {\r\n    return {\r\n      validMsg: '',\r\n    }\r\n  },\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  label {\r\n    margin-right: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  div {\r\n    margin-bottom: 1rem;\r\n  }\r\n  input {\r\n    margin-bottom: 5px;\r\n  }\r\n  span {\r\n    color: red;\r\n  }\r\n\r\n</style>"],"mappings":";;;EACWA,KAAK,EAAC;AAAQ;;EACVC,GAAG,EAAC;AAAE;gEAAcC,mBAAA,CAAc,cAAR,GAAC;;;EAO3BD,GAAG,EAAC;AAAE;;uBARfE,mBAAA,CASM,OATNC,UASM,GARJF,mBAAA,CAAkD,SAAlDG,UAAkD,G,kCAAhCC,MAAA,CAAAC,KAAK,IAAG,GAAC,iBAAAC,UAAc,C,GACzCN,mBAAA,CAKyB;IALjBO,IAAI,EAAEH,MAAA,CAAAG,IAAI;IAChBC,KAAK,EAAEJ,MAAA,CAAAG,IAAI,aAAaH,MAAA,CAAAK,UAAU,CAACC,WAAW,GAAGC,MAAM,UAAYP,MAAA,CAAAK,UAAU;IAC7EG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,sBAAsBF,MAAM,CAACG,MAAM,CAACT,KAAK;IACrDV,KAAK,EAAAoB,eAAA,mBAAoBd,MAAA,CAAAe,UAAU;IACnCC,WAAW,EAAEhB,MAAA,CAAAC,KAAK;IAClBgB,QAAQ,EAAEjB,MAAA,CAAAkB;+DACZtB,mBAAA,CAAsC,SAAtCuB,UAAsC,EAAAC,gBAAA,CAApBC,KAAA,CAAAC,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}