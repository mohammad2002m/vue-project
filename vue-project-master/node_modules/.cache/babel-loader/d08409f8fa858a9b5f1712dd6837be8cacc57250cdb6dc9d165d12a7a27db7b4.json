{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelDynamic as _vModelDynamic, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-41bbc2ba\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"col-md text\"\n};\nconst _hoisted_2 = {\n  for: \"\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"*\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"type\", \"placeholder\", \"disabled\"];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"col-md date\"\n};\nconst _hoisted_6 = {\n  for: \"\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"*\", -1 /* HOISTED */));\nconst _hoisted_8 = [\"type\", \"disabled\"];\nconst _hoisted_9 = {\n  key: 2\n};\nconst _hoisted_10 = {\n  for: \"\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"*\", -1 /* HOISTED */));\nconst _hoisted_12 = [\"placeholder\", \"disabled\"];\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"red\"\n  }\n}, \"*\", -1 /* HOISTED */));\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"\\r\\n        :value=\\\"inputType == 'date' ? '2023-01-01' : ''\\\"\\r\\n      \"), $props.inputType == 'text' || $props.inputType == 'number' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", _hoisted_2, [_createTextVNode(_toDisplayString($props.title) + \" \", 1 /* TEXT */), _hoisted_3]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userInput = $event),\n    type: $props.inputType,\n    class: _normalizeClass($data.inputStyle),\n    placeholder: $props.title,\n    disabled: $props.isReadOnly\n  }, null, 10 /* CLASS, PROPS */, _hoisted_4), [[_vModelDynamic, $data.userInput]]), _createElementVNode(\"label\", {\n    class: _normalizeClass($data.msgStyle),\n    for: \"\"\n  }, _toDisplayString($data.validMsg), 3 /* TEXT, CLASS */)])) : $props.inputType == 'date' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"label\", _hoisted_6, [_createTextVNode(_toDisplayString($props.title) + \" \", 1 /* TEXT */), _hoisted_7]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userInput = $event),\n    type: $props.inputType,\n    class: _normalizeClass($data.inputStyle),\n    disabled: $props.isReadOnly\n  }, null, 10 /* CLASS, PROPS */, _hoisted_8), [[_vModelDynamic, $data.userInput]]), _createElementVNode(\"label\", {\n    class: _normalizeClass($data.msgStyle),\n    for: \"\"\n  }, _toDisplayString($data.validMsg), 3 /* TEXT, CLASS */)])) : $props.inputType == 'textarea' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"label\", _hoisted_10, [_createTextVNode(_toDisplayString($props.title) + \" \", 1 /* TEXT */), _hoisted_11]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.userInput = $event),\n    type: \"text\",\n    class: _normalizeClass($data.inputStyle),\n    placeholder: $props.title,\n    rows: \"8\",\n    disabled: $props.isReadOnly\n  }, null, 10 /* CLASS, PROPS */, _hoisted_12), [[_vModelText, $data.userInput]]), _createElementVNode(\"label\", {\n    class: _normalizeClass($data.msgStyle),\n    for: \"\"\n  }, _toDisplayString($data.validMsg), 3 /* TEXT, CLASS */)])) : $props.inputType == 'select' ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 3,\n    onInput: _cache[4] || (_cache[4] = $event => {\n      $options.CheckValidityForSelect();\n    })\n  }, [_createElementVNode(\"label\", null, [_createTextVNode(_toDisplayString($props.title) + \" \", 1 /* TEXT */), _hoisted_13]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.userInput = $event),\n    class: _normalizeClass($data.inputStyle),\n    disabled: $props.isReadOnly\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.optionsList, (option, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: option\n    }, _toDisplayString(option), 9 /* TEXT, PROPS */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))], 10 /* CLASS, PROPS */, _hoisted_14), [[_vModelSelect, $data.userInput]]), _createElementVNode(\"label\", {\n    class: _normalizeClass($data.msgStyle),\n    for: \"\"\n  }, _toDisplayString($data.validMsg), 3 /* TEXT, CLASS */)], 32 /* HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","for","_createElementVNode","style","_createCommentVNode","$props","inputType","_createElementBlock","_hoisted_1","_hoisted_2","title","_hoisted_3","$data","userInput","$event","type","_normalizeClass","inputStyle","placeholder","disabled","isReadOnly","msgStyle","validMsg","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","rows","onInput","_cache","$options","CheckValidityForSelect","_hoisted_13","_Fragment","_renderList","optionsList","option","index","key","value","_hoisted_15"],"sources":["D:\\Vue\\vue-project-last\\src\\components\\RequestForm\\FormInputComponent.vue"],"sourcesContent":["<template>\r\n      <!--\r\n        :value=\"inputType == 'date' ? '2023-01-01' : ''\"\r\n      -->\r\n      <div v-if=\"inputType == 'text' || inputType == 'number'\" class=\"col-md text\">\r\n        <label for=\"\"> {{ title }} <span style=\"color:red;\">*</span> </label>\r\n        <input v-model=\"userInput\" :type=\"inputType\" :class=\"inputStyle\" :placeholder=\"title\"  :disabled=\"isReadOnly\"/>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n      </div>\r\n      <div v-else-if=\"inputType == 'date'\" class=\"col-md date\">\r\n        <label for=\"\"> {{ title }} <span style=\"color:red;\">*</span></label>\r\n        <input v-model=\"userInput\" :type=\"inputType\" :class=\"inputStyle\"   :disabled=\"isReadOnly\"/>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n      </div>\r\n      <div v-else-if=\"inputType == 'textarea'\">\r\n        <label for=\"\"> {{ title }} <span style=\"color:red;\">*</span></label>\r\n        <textarea v-model=\"userInput\" type=\"text\" :class=\"inputStyle\" :placeholder=\"title\" rows=\"8\"  :disabled=\"isReadOnly\"></textarea>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n      </div>\r\n      <div v-else-if=\"inputType == 'select'\" @input=\"CheckValidityForSelect();\">\r\n        <label> {{ title }} <span style=\"color:red;\">*</span></label>\r\n        <select v-model=\"userInput\" :class=\"inputStyle\" :disabled=\"isReadOnly\">\r\n          <option  v-for=\"(option, index) in optionsList\" :key=\"index\" :value=\"option\"> {{ option }} </option>\r\n        </select>\r\n        <label :class=\"msgStyle\" for=\"\"> {{ validMsg }} </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment';\r\nexport default {\r\n  name: 'FormInputComponent',\r\n  expose: ['userInput' , 'fromState' , 'CheckValidityForDate' , 'CheckValidityForText' , 'CheckValidityForSelect'],\r\n  props: {\r\n    inputType: String,\r\n    placeholder: String,\r\n    title: String,\r\n    optionsList: Array,\r\n    isReadOnly: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      userInput: this.InitialInputValue(),\r\n      validMsg: '',\r\n      fromState: true,\r\n      inputStyle: 'form-control',\r\n      msgStyle: ''\r\n    }\r\n  },\r\n  methods: {\r\n    /*\r\n    CheckIfReadOnly(){\r\n      if (this.isReadOnly){\r\n        this.inputStyle = 'form-control read'\r\n      }\r\n    },\r\n    */\r\n    InitialInputValue(){\r\n      if (this.inputType == 'select'){\r\n        return this.optionsList[0];\r\n      } else if (this.inputType == 'date'){\r\n        return moment(new Date()).format('YYYY-MM-DD');\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n    CheckValidityForText() {\r\n      let isValid = true;\r\n      if (this.userInput == ''){\r\n        this.validMsg = 'هذا الحقل مطلوب';\r\n        isValid = false;\r\n      } else {\r\n        this.validMsg = '';\r\n      }\r\n\r\n      if (isValid){\r\n        this.inputStyle = 'form-control is-valid';\r\n        this.msgStyle = 'msgValid';\r\n      } else {\r\n        this.inputStyle = 'form-control is-invalid';\r\n        this.msgStyle = 'msgInvalid';\r\n      }\r\n\r\n      return isValid;\r\n    },\r\n    EmitCheckDate(){\r\n      this.$emit('check-date');\r\n    },\r\n    CheckValidityForDate() {\r\n      let isValid = true;\r\n      \r\n      if (this.userInput == ''){\r\n        this.validMsg = 'هذا الحقل مطلوب';\r\n        isValid = false;\r\n      }\r\n      else if (moment().diff(this.userInput , 'day') > 0){\r\n        this.validMsg = 'التاريخ أقل من التريخ الحالي';\r\n        isValid = false;\r\n      }\r\n      else if (this.fromState == false){\r\n        this.validMsg = 'تاريخ إنتهاء الإجازة أقل من تاريخ بداية الإجازة';\r\n        isValid = false;\r\n      } else {\r\n        this.validMsg = '';\r\n      }\r\n\r\n      if (isValid){\r\n        this.inputStyle = 'form-control is-valid';\r\n        this.msgStyle = 'msgValid';\r\n      } else {\r\n        this.inputStyle = 'form-control is-invalid';\r\n        this.msgStyle = 'msgInvalid';\r\n      }\r\n\r\n      return isValid;\r\n    },\r\n    CheckValidityForSelect(){\r\n        this.inputStyle = 'form-control is-valid';\r\n        return true;\r\n    }\r\n\r\n  }\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  label {\r\n    margin-right: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  div {\r\n    margin-bottom: 3rem;\r\n    direction: rtl;\r\n  }\r\n  select {\r\n    background-position: left 0.75rem center;\r\n    padding-right: 0.57rem;\r\n  }\r\n  select:not(:focus) {\r\n    color: #595c5f;\r\n  }\r\n\r\n  input {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .msgValid {\r\n    color:rgb(40,167,69);\r\n  }\r\n  .msgInvalid {\r\n    color: rgb(220,53,69);\r\n  }\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}