{"ast":null,"code":"import { vModelText as _vModelText, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-group\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"error\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$v.name.$model = $event),\n    type: \"text\",\n    class: _normalizeClass({\n      invalid: _ctx.$v.name.$dirty && _ctx.$v.name.$invalid\n    }),\n    placeholder: \"Full name\"\n  }, null, 2 /* CLASS */), [[_vModelText, _ctx.$v.name.$model]])]), _ctx.$v.name.$dirty && _ctx.$v.name.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [!_ctx.$v.name.alpha ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"Alphanumeric characters only.\")) : _createCommentVNode(\"v-if\", true), !_ctx.$v.name.minLength ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Must have a length no less than \" + _toDisplayString(_ctx.$v.name.$params.minLength.min) + \".\", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), !_ctx.$v.name.required ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"Required field.\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.$v.email.$model = $event),\n    type: \"email\",\n    class: _normalizeClass({\n      invalid: _ctx.$v.email.$dirty && _ctx.$v.email.$invalid\n    }),\n    placeholder: \"Email\"\n  }, null, 2 /* CLASS */), [[_vModelText, _ctx.$v.email.$model]])]), _ctx.$v.email.$dirty && _ctx.$v.email.$invalid ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [!_ctx.$v.email.email ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"Must be a valid email address.\")) : _createCommentVNode(\"v-if\", true), !_ctx.$v.email.required ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Required field.\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_ctx","$v","name","$model","$event","type","_normalizeClass","invalid","$dirty","$invalid","placeholder","_Fragment","key","alpha","_hoisted_2","minLength","_hoisted_3","_toDisplayString","$params","min","required","_hoisted_4","_hoisted_5","email","_hoisted_6","_hoisted_7"],"sources":["D:\\Vue\\vue-project-last-edition\\vue-project\\vue-project-master\\src\\components\\RequestForm\\RequestForm.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\"form-group\">\r\n      <div>\r\n        <input\r\n          v-model=\"$v.name.$model\"\r\n          type=\"text\"\r\n          :class=\"{invalid: $v.name.$dirty && $v.name.$invalid}\"\r\n          placeholder=\"Full name\"\r\n        >\r\n      </div>\r\n      <template v-if=\"$v.name.$dirty && $v.name.$invalid\">\r\n        <span v-if=\"!$v.name.alpha\" class=\"error\">Alphanumeric characters only.</span>\r\n        <span\r\n          v-if=\"!$v.name.minLength\"\r\n          class=\"error\"\r\n        >Must have a length no less than {{$v.name.$params.minLength.min}}.</span>\r\n        <span v-if=\"!$v.name.required\" class=\"error\">Required field.</span>\r\n      </template>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div>\r\n        <input\r\n          v-model=\"$v.email.$model\"\r\n          type=\"email\"\r\n          :class=\"{invalid: $v.email.$dirty && $v.email.$invalid}\"\r\n          placeholder=\"Email\"\r\n        >\r\n      </div>\r\n      <template v-if=\"$v.email.$dirty && $v.email.$invalid\">\r\n        <span v-if=\"!$v.email.email\" class=\"error\">Must be a valid email address.</span>\r\n        <span v-if=\"!$v.email.required\" class=\"error\">Required field.</span>\r\n      </template>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { email, helpers, required, minLength } from \"vuelidate/lib/validators\";\r\nconst alpha = helpers.regex(\"alpha\", /^[a-zA-Z\\s]*$/);\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      name: \"\"\r\n    };\r\n  },\r\n  validations: {\r\n    email: {\r\n      email,\r\n      required\r\n    },\r\n    name: {\r\n      alpha,\r\n      minLength: minLength(10),\r\n      required\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;EAESA,KAAK,EAAC;AAAY;;;EAUSA,KAAK,EAAC;;;;EAGhCA,KAAK,EAAC;;;;EAEuBA,KAAK,EAAC;;;EAIpCA,KAAK,EAAC;AAAY;;;EAUUA,KAAK,EAAC;;;;EACHA,KAAK,EAAC;;;uBA/B5CC,mBAAA,CAkCU,kBAjCRC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJD,mBAAA,CAOM,c,gBANJA,mBAAA,CAKC;+DAJUE,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACC,MAAM,GAAAC,MAAA;IACvBC,IAAI,EAAC,MAAM;IACVT,KAAK,EAAAU,eAAA;MAAAC,OAAA,EAAYP,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACM,MAAM,IAAIR,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACO;IAAQ;IACpDC,WAAW,EAAC;0CAHHV,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACC,MAAM,E,KAMXH,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACM,MAAM,IAAIR,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACO,QAAQ,I,cAAlDZ,mBAAA,CAOWc,SAAA;IAAAC,GAAA;EAAA,I,CANIZ,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACW,KAAK,I,cAA1BhB,mBAAA,CAA8E,QAA9EiB,UAA8E,EAApC,+BAA6B,K,oCAE9Dd,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACa,SAAS,I,cAD1BlB,mBAAA,CAG0E,QAH1EmB,UAG0E,EAAzE,kCAAgC,GAAAC,gBAAA,CAAEjB,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACgB,OAAO,CAACH,SAAS,CAACI,GAAG,IAAE,GAAC,mB,oCACtDnB,IAAA,CAAAC,EAAE,CAACC,IAAI,CAACkB,QAAQ,I,cAA7BvB,mBAAA,CAAmE,QAAnEwB,UAAmE,EAAtB,iBAAe,K,sGAIhEvB,mBAAA,CAaM,OAbNwB,UAaM,GAZJxB,mBAAA,CAOM,c,gBANJA,mBAAA,CAKC;+DAJUE,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACpB,MAAM,GAAAC,MAAA;IACxBC,IAAI,EAAC,OAAO;IACXT,KAAK,EAAAU,eAAA;MAAAC,OAAA,EAAYP,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACf,MAAM,IAAIR,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACd;IAAQ;IACtDC,WAAW,EAAC;0CAHHV,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACpB,MAAM,E,KAMZH,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACf,MAAM,IAAIR,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACd,QAAQ,I,cAApDZ,mBAAA,CAGWc,SAAA;IAAAC,GAAA;EAAA,I,CAFIZ,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACA,KAAK,I,cAA3B1B,mBAAA,CAAgF,QAAhF2B,UAAgF,EAArC,gCAA8B,K,oCAC5DxB,IAAA,CAAAC,EAAE,CAACsB,KAAK,CAACH,QAAQ,I,cAA9BvB,mBAAA,CAAoE,QAApE4B,UAAoE,EAAtB,iBAAe,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}